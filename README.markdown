Emacs Configuration
===================

The majority of configuration is done directly in `init.el`. I typically run
on MacOS X and tend to do most of my tweaking on that platform. I use the
same configuration on Linux, though not as frequently.

I have recently converted my configuration to literate style using
`org-mode` and `org-babel`. Please have a look at the individual org files
for more information.

Simply running Emacs with the setup should correctly setup all files and
packages.

Additional Directories
---------------------

`dotfiles-dir` is set to be the configuration directory (`~/.emacs.d`).

`metafiles-dir` is set to the directory used to contain metadata (see
Metadata below).

The `load-path` is configured to include all files in `dotfiles-dir` as
well as the `vendor` sub-directory and all of its top level
sub-directories. This allows me to place all 3rd-party files in a single
location that is separate from my own configuration.

Org Mode
--------

I am still actively working on my Org mode configuration. It is still not
quite to my liking. I keep this in an external file. Org files are
currently stored in dropbox directory to allow syncing and support for
mobile org.

Metadata
--------

I call content automatically generated by Emacs metadata. I don't believe
this content should reside within the configuration directory nor my home
directory, so I relocate it all into another folder (`~/.emacs-meta`). This
helps to keep things clean.

Near the top of `init.el`, I have created a series of variables to point to
all of this metadata content.

Currently this covers:

  * places - where to store the `places` file (see `saveplace.el`).
  * bookmarks - where to put the `bookmarks` file.
  * saveplace - where to record `save-place-alist`.
  * savehist - where minibuffer history is saved.
  * recentf - where the recent list is stored.
  * auto-save-list - prefix for auto-save files
  * ido.last - where ido state is saved between invocations.
  * tramp - where `tramp` stores its data

Specific Paths
--------------

Some things require specific paths. I have isolated all of my path specific
variables to machine specific files. Paths for each item listed below are expected.

### aspell ###

        ispell-program-name

Spell check section needs absolute path to aspell.

### multi-term ###

Terminal section specifies `/bin/bash` as the `multi-term-program`. As this
is common on all platforms, it is defined in `init.el`.

### markdown ###

        markdown-command

I use multi-markdown instead of markdown, `markdown-command` is set to the
absolute path of `mmd`.

### Erlang ###

        erlang-root-dir

My local Erlang distribution's root directory is set and the tools
directory is added to the `load-path`.

### lintnode ###

        lintnode-location

I use `lintnode` for JavaScript validation using `flymake`. The absolute
path of `lintnode` is specified. Additionally, the `flymake-jslint.el` file
from `lintnode` should be copied to the `vendor` directory.

### CoffeeScript ###

        coffee-command

`NODE_PATH` needs to be set to ensure `node` modules can be loaded
properly. Also full path to `coffee` is specified.

### Python ###

        jme-python-flymake-script

Full path to `pycheckers.sh` file for flymake is specified.

### Org ###

        org-directory
        org-mobile-directory

Paths to where org files are located as well as files published for mobile
org.
